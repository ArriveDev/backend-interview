openapi: 3.0.0
info:
  title: Task Management API
  description: API for managing tasks and their steps.
  version: 1.0.0
servers:
  - url: https://api.taskmanagement.com/v1
    description: Production server
  - url: https://staging.api.taskmanagement.com/v1
    description: Staging server

paths:
  /tasks:
    get:
      summary: Get all tasks
      description: Retrieve a list of all tasks with their details.
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      description: Create a new task with its details and steps.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /tasks/{taskId}:
    get:
      summary: Get task by ID
      description: Retrieve details of a task by its ID.
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
    put:
      summary: Update task by ID
      description: Update details of a task by its ID.
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
    delete:
      summary: Delete task by ID
      description: Delete a task by its ID.
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Task deleted successfully
        '404':
          description: Task not found

  /tasks/{taskId}/steps:
    get:
      summary: Get all steps of a task
      description: Retrieve all steps for a specific task.
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A list of steps for the task
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Step'
        '404':
          description: Task not found
    post:
      summary: Add a new step to a task
      description: Add a new step to a task by task ID.
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Step'
      responses:
        '201':
          description: Step added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Step'
        '404':
          description: Task not found

  /tasks/{taskId}/steps/{stepId}:
    put:
      summary: Update step by ID
      description: Update a step's completion status or description by step ID.
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
        - name: stepId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Step'
      responses:
        '200':
          description: Step updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Step'
        '404':
          description: Task or step not found
    delete:
      summary: Delete step by ID
      description: Delete a specific step from a task.
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
        - name: stepId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Step deleted successfully
        '404':
          description: Task or step not found

components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Task 1: Write Documentation"
        description:
          type: string
          example: "Create comprehensive documentation for the new feature release."
        author:
          $ref: '#/components/schemas/Author'
        steps:
          type: array
          items:
            $ref: '#/components/schemas/Step'

    Step:
      type: object
      properties:
        step:
          type: string
          example: "Step 1: Draft initial outline"
        completed:
          type: boolean
          example: true

    Author:
      type: object
      properties:
        first_name:
          type: string
          example: "Alice"
        last_name:
          type: string
          example: "Johnson"
        username:
          type: string
          example: "alice_j"
        id:
          type: integer
          example: 101
